plugins {
    id 'java-library'
}

sourceSets {
    integrationTest {
        java.srcDir file('src/it/java')
        resources.srcDir file('src/it/resources')
        compileClasspath += sourceSets.main.output + sourceSets.test.output + configurations.testRuntime
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output + configurations.testRuntime
    }
}

test {
    useJUnitPlatform()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'



task integrationTest(type: Test) {
    group 'Verification'
    useJUnitPlatform()
    description 'Runs the integration tests.'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    api 'org.slf4j:slf4j-api:1.7.25'
    compile 'com.google.code.gson:gson:2.8.5'
    implementation 'guru.nidi:graphviz-java:0.10.1'
    implementation 'org.apache.commons:commons-text:1.8'
    implementation 'com.jayway.jsonpath:json-path:2.4.0'
    implementation 'org.asciidoctor:asciidoctorj:2.1.0'

    testImplementation 'org.mockito:mockito-core:1.+'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation "org.mockito:mockito-core:2.+"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

